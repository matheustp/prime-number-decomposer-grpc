// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/prime_number_decomposer.proto

/*
Package pndpb is a generated protocol buffer package.

It is generated from these files:
	pb/prime_number_decomposer.proto

It has these top-level messages:
	PrimeNumberDecomposerRequest
	PrimeNumberDecomposerResponse
*/
package pndpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PrimeNumberDecomposerRequest struct {
	Number int32 `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
}

func (m *PrimeNumberDecomposerRequest) Reset()                    { *m = PrimeNumberDecomposerRequest{} }
func (m *PrimeNumberDecomposerRequest) String() string            { return proto.CompactTextString(m) }
func (*PrimeNumberDecomposerRequest) ProtoMessage()               {}
func (*PrimeNumberDecomposerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PrimeNumberDecomposerRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeNumberDecomposerResponse struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *PrimeNumberDecomposerResponse) Reset()                    { *m = PrimeNumberDecomposerResponse{} }
func (m *PrimeNumberDecomposerResponse) String() string            { return proto.CompactTextString(m) }
func (*PrimeNumberDecomposerResponse) ProtoMessage()               {}
func (*PrimeNumberDecomposerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PrimeNumberDecomposerResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*PrimeNumberDecomposerRequest)(nil), "prime_number_decomposer.PrimeNumberDecomposerRequest")
	proto.RegisterType((*PrimeNumberDecomposerResponse)(nil), "prime_number_decomposer.PrimeNumberDecomposerResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PrimeNumberDecomposerService service

type PrimeNumberDecomposerServiceClient interface {
	PrimeNumberDecompose(ctx context.Context, in *PrimeNumberDecomposerRequest, opts ...grpc.CallOption) (PrimeNumberDecomposerService_PrimeNumberDecomposeClient, error)
}

type primeNumberDecomposerServiceClient struct {
	cc *grpc.ClientConn
}

func NewPrimeNumberDecomposerServiceClient(cc *grpc.ClientConn) PrimeNumberDecomposerServiceClient {
	return &primeNumberDecomposerServiceClient{cc}
}

func (c *primeNumberDecomposerServiceClient) PrimeNumberDecompose(ctx context.Context, in *PrimeNumberDecomposerRequest, opts ...grpc.CallOption) (PrimeNumberDecomposerService_PrimeNumberDecomposeClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_PrimeNumberDecomposerService_serviceDesc.Streams[0], c.cc, "/prime_number_decomposer.PrimeNumberDecomposerService/PrimeNumberDecompose", opts...)
	if err != nil {
		return nil, err
	}
	x := &primeNumberDecomposerServicePrimeNumberDecomposeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PrimeNumberDecomposerService_PrimeNumberDecomposeClient interface {
	Recv() (*PrimeNumberDecomposerResponse, error)
	grpc.ClientStream
}

type primeNumberDecomposerServicePrimeNumberDecomposeClient struct {
	grpc.ClientStream
}

func (x *primeNumberDecomposerServicePrimeNumberDecomposeClient) Recv() (*PrimeNumberDecomposerResponse, error) {
	m := new(PrimeNumberDecomposerResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for PrimeNumberDecomposerService service

type PrimeNumberDecomposerServiceServer interface {
	PrimeNumberDecompose(*PrimeNumberDecomposerRequest, PrimeNumberDecomposerService_PrimeNumberDecomposeServer) error
}

func RegisterPrimeNumberDecomposerServiceServer(s *grpc.Server, srv PrimeNumberDecomposerServiceServer) {
	s.RegisterService(&_PrimeNumberDecomposerService_serviceDesc, srv)
}

func _PrimeNumberDecomposerService_PrimeNumberDecompose_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeNumberDecomposerRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PrimeNumberDecomposerServiceServer).PrimeNumberDecompose(m, &primeNumberDecomposerServicePrimeNumberDecomposeServer{stream})
}

type PrimeNumberDecomposerService_PrimeNumberDecomposeServer interface {
	Send(*PrimeNumberDecomposerResponse) error
	grpc.ServerStream
}

type primeNumberDecomposerServicePrimeNumberDecomposeServer struct {
	grpc.ServerStream
}

func (x *primeNumberDecomposerServicePrimeNumberDecomposeServer) Send(m *PrimeNumberDecomposerResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _PrimeNumberDecomposerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "prime_number_decomposer.PrimeNumberDecomposerService",
	HandlerType: (*PrimeNumberDecomposerServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeNumberDecompose",
			Handler:       _PrimeNumberDecomposerService_PrimeNumberDecompose_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pb/prime_number_decomposer.proto",
}

func init() { proto.RegisterFile("pb/prime_number_decomposer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x28, 0x48, 0xd2, 0x2f,
	0x28, 0xca, 0xcc, 0x4d, 0x8d, 0xcf, 0x2b, 0xcd, 0x4d, 0x4a, 0x2d, 0x8a, 0x4f, 0x49, 0x4d, 0xce,
	0xcf, 0x2d, 0xc8, 0x2f, 0x4e, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0xc7, 0x21,
	0xad, 0x64, 0xc6, 0x25, 0x13, 0x00, 0x92, 0xf2, 0x03, 0xcb, 0xb8, 0xc0, 0x25, 0x82, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xc4, 0xb8, 0xd8, 0x20, 0x9a, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58,
	0x83, 0xa0, 0x3c, 0x25, 0x73, 0x2e, 0x59, 0x1c, 0xfa, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x41,
	0x1a, 0x8b, 0x52, 0x8b, 0x4b, 0x73, 0x4a, 0x60, 0x1a, 0x21, 0x3c, 0xa3, 0x55, 0x8c, 0x38, 0x6c,
	0x0c, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0xea, 0x64, 0xe4, 0x12, 0xc1, 0xa6, 0x40, 0xc8,
	0x54, 0x0f, 0x97, 0x1f, 0xf1, 0xf9, 0x40, 0xca, 0x8c, 0x54, 0x6d, 0x10, 0x0f, 0x28, 0x31, 0x18,
	0x30, 0x3a, 0xb1, 0x47, 0xb1, 0x16, 0xe4, 0xa5, 0x14, 0x24, 0x25, 0xb1, 0x81, 0x83, 0xd1, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0x97, 0xf0, 0xde, 0xe6, 0x6a, 0x01, 0x00, 0x00,
}
